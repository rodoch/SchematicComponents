/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */

import '@stencil/core';

declare global {
  namespace JSX {
    interface Element {}
    export interface IntrinsicElements {}
  }
  namespace JSXElements {}

  interface HTMLElement {
    componentOnReady?: () => Promise<this | null>;
  }

  interface HTMLStencilElement extends HTMLElement {
    componentOnReady(): Promise<this>;

    forceUpdate(): void;
  }

  interface HTMLAttributes {}
}


declare global {

  namespace StencilComponents {
    interface MyComponent {
      'first': string;
      'last': string;
    }
  }

  interface HTMLMyComponentElement extends StencilComponents.MyComponent, HTMLStencilElement {}

  var HTMLMyComponentElement: {
    prototype: HTMLMyComponentElement;
    new (): HTMLMyComponentElement;
  };
  interface HTMLElementTagNameMap {
    'my-component': HTMLMyComponentElement;
  }
  interface ElementTagNameMap {
    'my-component': HTMLMyComponentElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'my-component': JSXElements.MyComponentAttributes;
    }
  }
  namespace JSXElements {
    export interface MyComponentAttributes extends HTMLAttributes {
      'first'?: string;
      'last'?: string;
    }
  }
}


declare global {

  namespace StencilComponents {
    interface SchematicResourceEditorToolbar {

    }
  }

  interface HTMLSchematicResourceEditorToolbarElement extends StencilComponents.SchematicResourceEditorToolbar, HTMLStencilElement {}

  var HTMLSchematicResourceEditorToolbarElement: {
    prototype: HTMLSchematicResourceEditorToolbarElement;
    new (): HTMLSchematicResourceEditorToolbarElement;
  };
  interface HTMLElementTagNameMap {
    'schematic-resource-editor-toolbar': HTMLSchematicResourceEditorToolbarElement;
  }
  interface ElementTagNameMap {
    'schematic-resource-editor-toolbar': HTMLSchematicResourceEditorToolbarElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'schematic-resource-editor-toolbar': JSXElements.SchematicResourceEditorToolbarAttributes;
    }
  }
  namespace JSXElements {
    export interface SchematicResourceEditorToolbarAttributes extends HTMLAttributes {
      'onCreateNewResource'?: (event: CustomEvent) => void;
      'onDeleteCurrentResouce'?: (event: CustomEvent) => void;
      'onGetNewResource'?: (event: CustomEvent) => void;
      'onUpdateCurrentResource'?: (event: CustomEvent) => void;
    }
  }
}


declare global {

  namespace StencilComponents {
    interface SchematicResourceEditor {
      'clearEditor': () => void;
      'createResource': () => void;
      'deleteResource': (id: string) => void;
      'newResource': () => void;
      'placeholder': string;
      'readResource': (id: string) => void;
      'resourceId': string;
      'updateResource': (id: string) => void;
      'url': string;
    }
  }

  interface HTMLSchematicResourceEditorElement extends StencilComponents.SchematicResourceEditor, HTMLStencilElement {}

  var HTMLSchematicResourceEditorElement: {
    prototype: HTMLSchematicResourceEditorElement;
    new (): HTMLSchematicResourceEditorElement;
  };
  interface HTMLElementTagNameMap {
    'schematic-resource-editor': HTMLSchematicResourceEditorElement;
  }
  interface ElementTagNameMap {
    'schematic-resource-editor': HTMLSchematicResourceEditorElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'schematic-resource-editor': JSXElements.SchematicResourceEditorAttributes;
    }
  }
  namespace JSXElements {
    export interface SchematicResourceEditorAttributes extends HTMLAttributes {
      'placeholder'?: string;
      'resourceId'?: string;
      'url'?: string;
    }
  }
}


declare global {

  namespace StencilComponents {
    interface SchematicResourceFilters {
      'clearFilters': () => void;
      'openFilters': (url: string) => void;
      'url': string;
    }
  }

  interface HTMLSchematicResourceFiltersElement extends StencilComponents.SchematicResourceFilters, HTMLStencilElement {}

  var HTMLSchematicResourceFiltersElement: {
    prototype: HTMLSchematicResourceFiltersElement;
    new (): HTMLSchematicResourceFiltersElement;
  };
  interface HTMLElementTagNameMap {
    'schematic-resource-filters': HTMLSchematicResourceFiltersElement;
  }
  interface ElementTagNameMap {
    'schematic-resource-filters': HTMLSchematicResourceFiltersElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'schematic-resource-filters': JSXElements.SchematicResourceFiltersAttributes;
    }
  }
  namespace JSXElements {
    export interface SchematicResourceFiltersAttributes extends HTMLAttributes {
      'url'?: string;
    }
  }
}


declare global {

  namespace StencilComponents {
    interface SchematicResourceListLink {
      'resourceId': string;
      'status': string;
    }
  }

  interface HTMLSchematicResourceListLinkElement extends StencilComponents.SchematicResourceListLink, HTMLStencilElement {}

  var HTMLSchematicResourceListLinkElement: {
    prototype: HTMLSchematicResourceListLinkElement;
    new (): HTMLSchematicResourceListLinkElement;
  };
  interface HTMLElementTagNameMap {
    'schematic-resource-list-link': HTMLSchematicResourceListLinkElement;
  }
  interface ElementTagNameMap {
    'schematic-resource-list-link': HTMLSchematicResourceListLinkElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'schematic-resource-list-link': JSXElements.SchematicResourceListLinkAttributes;
    }
  }
  namespace JSXElements {
    export interface SchematicResourceListLinkAttributes extends HTMLAttributes {
      'onSetActiveResource'?: (event: CustomEvent) => void;
      'resourceId'?: string;
      'status'?: string;
    }
  }
}


declare global {

  namespace StencilComponents {
    interface SchematicResourceList {
      'activeResourceId': string;
      'clearResourceList': () => void;
      'listResources': (url: string, formData?: FormData) => void;
      'url': string;
    }
  }

  interface HTMLSchematicResourceListElement extends StencilComponents.SchematicResourceList, HTMLStencilElement {}

  var HTMLSchematicResourceListElement: {
    prototype: HTMLSchematicResourceListElement;
    new (): HTMLSchematicResourceListElement;
  };
  interface HTMLElementTagNameMap {
    'schematic-resource-list': HTMLSchematicResourceListElement;
  }
  interface ElementTagNameMap {
    'schematic-resource-list': HTMLSchematicResourceListElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'schematic-resource-list': JSXElements.SchematicResourceListAttributes;
    }
  }
  namespace JSXElements {
    export interface SchematicResourceListAttributes extends HTMLAttributes {
      'activeResourceId'?: string;
      'url'?: string;
    }
  }
}


declare global {

  namespace StencilComponents {
    interface SchematicResourceSearch {
      'placeholder': string;
      'url': string;
    }
  }

  interface HTMLSchematicResourceSearchElement extends StencilComponents.SchematicResourceSearch, HTMLStencilElement {}

  var HTMLSchematicResourceSearchElement: {
    prototype: HTMLSchematicResourceSearchElement;
    new (): HTMLSchematicResourceSearchElement;
  };
  interface HTMLElementTagNameMap {
    'schematic-resource-search': HTMLSchematicResourceSearchElement;
  }
  interface ElementTagNameMap {
    'schematic-resource-search': HTMLSchematicResourceSearchElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'schematic-resource-search': JSXElements.SchematicResourceSearchAttributes;
    }
  }
  namespace JSXElements {
    export interface SchematicResourceSearchAttributes extends HTMLAttributes {
      'placeholder'?: string;
      'url'?: string;
    }
  }
}

declare global { namespace JSX { interface StencilJSX {} } }

export declare function defineCustomElements(window: any): void;